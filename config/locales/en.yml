en:
  hello: "Hello world"
  cancel: "Cancel"
  show: "Show"
  destroy: 'Destroy'
  edit: "Edit"
  edit_exercise: "Edit %{exercise}"
  new_submission: "New Submission"
  new_import: "Import now!"
  my_submissions: 'My Submissions'
  submission_created: 'Submission was successfully created'
  my_exercises: 'My Exercises'
  new_exercise: 'New Exercise'
  results: 'Results'
  submission_for_exercise: 'Submission for exercise'
  more: "more..."
  comma_or_tab_separated: 'Comma or tab separated!'
  you_can_use_markdown_here_html: 'You can use <a href="http://daringfireball.net/projects/markdown/syntax">Markdown</a> here'
  here: 'here'
  language: 'Language'
  title: 'Title'
  actions: 'Actions'
  are_you_sure: 'Are you sure?'
  all_exercises: 'All exercises'
  latest_exercises: 'Latest exercises'
  hottest_exercises: 'Hottest Exercises'
  sign_out: "Sign Out"
  sign_in_with_github: 'Sign in with Github'
  exercise: 'Exercise'
  submission_date: 'Submission date'
  status: 'Status'
  passed: 'passed'
  failed: 'failed'
  running: 'running'
  pending: 'pending'
  listing_exercises: 'Listing exercises'
  search: 'Search'
  new_guide: "New Guide"
  github_url_hint: "username/repository"
  guide_created: "Guide created successfully"
  guide: "Guide"
  authored_by: "Authored by %{author}"
  import_created: "Import enqueued"
  submission: "submission"
  import: "import"
  mumuki_catchphrase: "Improve your programming skills"
  mumuki_short_description: "Mumuki is a simple, open and collaborative platform for sharing and solving programming exercises. It is aimed to help people with learning and teaching programing languages and paradigms"
  tag: "Tag"
  submissions_for: "Submissions for %{exercise}"
  you_must: "You must %{action} before continue"
  you_must_sign_in_before_submitting: 'You must sign in with Github before submitting your solutions'
  sign_in_with_github_action: "sign in with Github"
  latest_guides: "latests guides"
  submissions_count: "Submissions"
  mumuki_is_simple: "Mumuki is simple"
  mumuki_is_collaborative: "Mumuki is collaborative"
  mumuki_is_open: "Mumuki is open"
  start_practicing: "Start Practicing!"
  continue_practicing: "Continue Practicing!"
  create_exercises: "Create exercises!"
  mumuki_is_simple_description: "Mumuki lets you focous on what you want: improve your programing skills by resolving programming problems. We will not force any schedule or exams - you practice when you want. Think it a Code Kata platform, where you can get feedback of your solution."
  mumuki_is_collaborative_description: "Mumuki's exercises are not provided by experts but by the community. There is no distinction between a teacher and a student in Mumuki - anyone can create new exercises. We encourage you to create and share your own."
  mumuki_is_open_description: "Mumuki is open source software - that means, you can help to improve Mumuki Platform.       Mumuki is also open for extension - we want to have exercises for a large range of programming languages. You       can help us to meet that goal."
  my_guides: "My Guides"
  profile_of: "Profile of %{username}"
  search: "Search"
  belongs_to_guide: "Belongs to guide %{guide}"
  created_at: "Created at"
  create_submission: "Submit your solution!"
  next_exercise: "Gimme another exercise!"
  no_exercises: "Nobody created an exercise for this search yet. <a href=\"%{create_path}\">Be the first!</a>"
  no_guides: "Nobody created a guide for this search yet. <a href=\"%{create_path}\">Be the first!</a>"
  notify_problem_to_author: "Notify problem to author"
  problem_with_exercise: "Problem with exercise: %{title}"


  exercise_count: "exercises"
  no_submissions: "Its seems like you haven't tried to solve this exercise"
  output: "Output"
  about_this_guide: "About this guide"
  stats: "Some stats"
  guide_has_exercises_stats: "This guide has <strong>%{total} exercises</strong>"



  expectation_must: 'must'
  expectation_must_not: 'must not'

  expectation_HasBinding: "%{binding} %{must} be defined"
  expectation_HasGuards: "%{binding} %{must} use gards"
  expectation_HasComposition: "%{binding} %{must} use composition"
  expectation_HasLambda: "%{binding} %{must} use lambda expressions"
  expectation_HasComprehension: "%{binding} %{must} use list comprehensions"
  expectation_HasDirectRecursion: "%{binding} %{must} use recursion"
  expectation_HasUsage: "%{binding} %{must} use %{target}"
  expectations: "Expectations"
  add_expectation: "Add Expectation"
  extras: "Extras"
  basic: "Basic"
